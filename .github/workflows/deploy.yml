name: Build and Deploy Microservices

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api-gateway: ${{ steps.filter.outputs.api-gateway }}
      auth: ${{ steps.filter.outputs.auth }}
      dashboard: ${{ steps.filter.outputs.dashboard }}
      game: ${{ steps.filter.outputs.game }}
      shared: ${{ steps.filter.outputs.shared }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api-gateway: apps/api-gateway/**
            auth: apps/auth/**
            dashboard: apps/dashboard/**
            game: apps/game/**
            shared: packages/**/*

      - name: Set deployment matrix
        id: set-matrix
        run: |
          # If shared packages changed, deploy all services
          if [[ "${{ steps.filter.outputs.shared }}" == "true" ]]; then
            echo "Shared packages changed, building/deploying all services."
            echo "matrix={\"service\":[\"api-gateway\",\"auth\",\"dashboard\",\"game\"]}" >> $GITHUB_OUTPUT
          else
            # Otherwise create array of changed services
            SERVICES="["
            if [[ "${{ steps.filter.outputs.api-gateway }}" == "true" ]]; then
              SERVICES+="\"api-gateway\","
            fi
            if [[ "${{ steps.filter.outputs.auth }}" == "true" ]]; then
              SERVICES+="\"auth\","
            fi
            if [[ "${{ steps.filter.outputs.dashboard }}" == "true" ]]; then
              SERVICES+="\"dashboard\","
            fi
            if [[ "${{ steps.filter.outputs.game }}" == "true" ]]; then
              SERVICES+="\"game\","
            fi
            # Remove trailing comma if necessary
            SERVICES=$(echo $SERVICES | sed 's/,$//')
            SERVICES+="]"
            if [[ "$SERVICES" == "[]" ]]; then
              echo "No relevant services changed, skipping build/deploy."
              echo "matrix={\"service\":[]}" >> $GITHUB_OUTPUT
            else
              echo "Changed services detected: $SERVICES. Setting matrix."
              echo "matrix={\"service\":$SERVICES}" >> $GITHUB_OUTPUT
            fi
          fi

      # Add a debugging step to check the matrix output
      - name: Debug Output
        run: |
          echo "Matrix output: ${{ steps.set-matrix.outputs.matrix }}"

  build-and-deploy:
    needs: detect-changes
    # Simplified condition that's more reliable
    if: needs.detect-changes.outputs.api-gateway == 'true' || needs.detect-changes.outputs.auth == 'true' || needs.detect-changes.outputs.dashboard == 'true' || needs.detect-changes.outputs.game == 'true' || needs.detect-changes.outputs.shared == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      # Install Protocol Buffers compiler
      - name: Install Protocol Buffers
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version  # Verify installation

      # Install ts-proto globally
      - name: Install ts-proto
        run: |
          npm install -g ts-proto
          echo "Installed ts-proto successfully"

      - name: Install dependencies
        run: npm ci

      - name: Build with Turborepo
        run: npx turbo run build --filter=${{ matrix.service }}...

      # --- Docker Build and Push Steps ---

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.service }}/Dockerfile # Path to the service's Dockerfile
          push: true
          tags: |
            fizanmuhammedfaisal/crystal-quest:${{ matrix.service }}-latest
            fizanmuhammedfaisal/crystal-quest:${{ matrix.service }}-${{ github.sha }}

          cache-from: type=github,ref=${{ github.ref_name }}
          cache-to: type=github,ref=${{ github.ref_name }},mode=max
